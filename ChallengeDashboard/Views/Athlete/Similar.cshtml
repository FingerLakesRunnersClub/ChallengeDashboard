@using System.Text.Json
@using FLRC.ChallengeDashboard
@model SimilarAthletesViewModel

@await Html.PartialAsync("AthleteHeader", Model.Athlete)

<div class="card card-highlighted">
    <div class="card-body">
        <h3>Similar Athletes</h3>
        
        <script>
            const fields = [
                { name: "Rank", center: true, value: r => r.Rank.Value },
                { name: "Name", value: r => r.Athlete.Name, link: r => `/Athlete/Index/${r.Athlete.ID}` },
                { name: "Age", center: true, value: r => r.Athlete.Age },
                { name: "Category", center: true, value: r => r.Athlete.Category ? r.Athlete.Category.Display : '' },
                { name: "Fastest Pace", center: true, value: r => r.FastestPercent ? r.FastestPercent.Display : '(no data)', sort: r => r.FastestPercent ? r.FastestPercent.Value : 100 },
                { name: "Average Pace", center: true, value: r => r.AveragePercent ? r.AveragePercent.Display : '(no data)', sort: r => r.AveragePercent ? r.AveragePercent.Value : 100 },
                { name: "Similarity", center: true, value: r => r.Similarity.Display, sort: r => r.Similarity.Value, descending: true },
                { name: "Confidence", center: true, value: r => r.Confidence.Display, sort: r => r.Confidence.Value, descending: true }
            ];
            
            const rows = @Html.Raw(JsonSerializer.Serialize(Model.Matches));
        </script>
        
        @await Html.PartialAsync("DataTable")
    </div>
</div>