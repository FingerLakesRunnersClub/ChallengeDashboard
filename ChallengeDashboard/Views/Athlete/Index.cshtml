@using FLRC.ChallengeDashboard
@model AthleteSummaryViewModel

<h2>
    @Model.Athlete.Name
    <small>(@Model.Athlete.AgeToday&nbsp;@Model.Athlete.Category?.Display)</small>
</h2>

<table class="table table-bordered table-sm text-center">
    <thead>
    <tr>
        <th>
            Team
        </th>
        @if (Model.Athlete.Category != null)
        {
            <th>
                Overall Points
            </th>
        }
        <th>
            Total Miles
        </th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>
            @Model.Athlete.Team.Display
            (<a href="/Overall/Team">@Model.TeamResults?.Rank.Display</a>)
        </td>
        @if (Model.Athlete.Category != null)
        {
            <td>
                @Model.OverallPoints?.Value?.Display
                (<a href="/Overall/Points/@Model.Athlete.Category.Display">@Model.OverallPoints?.Rank?.Display</a>)
            </td>
        }
        <td>
            @Model.OverallMiles?.Value.ToString("F1")
            (<a href="/Overall/Miles">@Model.OverallMiles?.Rank?.Display</a>)
        </td>
    </tr>
    </tbody>
</table>

<div class="row">
    @foreach (var course in Model.Fastest.Where(r => r.Value != null))
    {
        <div class="col-12 col-lg-6">
            <div class="card-highlighted card mb-3">
                <div class="card-body">
                    @await Html.PartialAsync("CourseInfo", course.Key)
                    <dl class="row mt-2 mb-0">
                        <dt class="col-6">
                            Fastest Time
                        </dt>
                        <dd class="col-6">
                            @Model.Fastest[course.Key].Value.Display
                            (<a href="/Course/@course.Key.ID/Fastest/@Model.Athlete.Category?.Value">@Model.Fastest[course.Key].Rank.Display</a>)
                        </dd>
                        <dt class="col-6">
                            Points
                        </dt>
                        <dd class="col-6">
                            @Model.Fastest[course.Key].Points.Display
                        </dd>
                        <dt class="col-6">
                            Age Grade
                        </dt>
                        <dd class="col-6">
                            @Model.Fastest[course.Key].AgeGrade.Display
                        </dd>
                        <dt class="col-6">
                            Average (Top @course.Key.AverageThreshold(Model.Athlete.Category))
                        </dt>
                        <dd class="col-6">
                            @if (Model.Average[course.Key] != null)
                            {
                                @Model.Average[course.Key].Value.Display
                                @:(<a href="/Course/@course.Key.ID/BestAverage/@Model.Athlete.Category?.Value">@Model.Average[course.Key].Rank.Display</a>)
                            }
                            else
                            {
                                @:(not enough runs)
                            }
                        </dd>
                        <dt class="col-6">
                            # of Runs
                        </dt>
                        <dd class="col-6">
                            @Model.Runs[course.Key].Value
                            (<a href="/Course/@course.Key.ID/MostRuns">@Model.Runs[course.Key].Rank.Display</a>)
                        </dd>
                    </dl>
                </div>
                <div class="card-footer">
                    <a href="/Athlete/@Model.Athlete.ID/Course/@course.Key.ID">View All Runs</a>
                </div>
            </div>
        </div>
    }
</div>