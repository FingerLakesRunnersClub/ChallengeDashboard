@using FLRC.ChallengeDashboard
@model ResultsViewModel

@functions
{
    string style(ResultType type) => Model.ResultType.Value == type
        ? "secondary"
        : "light";

    string style(Category category) => (Model.Category == null && category == null)
                                       || (Model.Category?.Equals(category) ?? false)
        ? "secondary"
        : "light";
}

<div class="btn-group mb-2">
    @foreach (var type in Enum.GetValues<ResultType>().Select(t => new FormattedResultType(t)))
    {
        <a class="btn btn-@style(type.Value)" href="/Course/@Model.Course.ID/@type.Value/@Model.Category?.Value">@type.Display</a>
    }
</div>

@if (Model.ResultType.Value != ResultType.Team)
{
    <div class="btn-group mb-2">
        <a class="btn btn-@style(null)" href="/Course/@Model.Course.ID/@Model.ResultType.Value">All</a>
        <a class="btn btn-@style(Category.F)" href="/Course/@Model.Course.ID/@Model.ResultType.Value/F">F</a>
        <a class="btn btn-@style(Category.M)" href="/Course/@Model.Course.ID/@Model.ResultType.Value/M">M</a>
    </div>
}
<div class="clear clearfix"></div>