@using System.Text.Json
@using FLRC.ChallengeDashboard
@model ResultsViewModel<Time>

@await Html.PartialAsync("CourseInfo", Model.Course)
@await Html.PartialAsync("ResultFilter")

<script>
    const fields = [
        { name: 'Rank', center: true, value: r => r.Rank.Value },
        { name: 'Name', center: false, value: r => r.Athlete.Name, link: r => `/Athlete/Index/${r.Athlete.ID}` },
        { name: 'Age', center: true, value: r => r.Athlete.Age },
        { name: 'Team', center: true, value: r => r.Athlete.Team.Display, sort: r => r.Athlete.Team.Value },
        { name: 'Time', center: true, value: r => r.Result.Duration.Display, sort: r => r.Result.Duration.Value.TotalSeconds },
        { name: 'Age Grade', center: true, value: r => r.AgeGrade.Display, sort: r => r.AgeGrade.Value, descending: true },
        { name: 'Behind Leader', center: true, value: r => `+ ${r.BehindLeader.Display}`, sort: r => r.BehindLeader.Value.TotalSeconds },
        { name: 'Points', center: true, value: r => r.Points.Display, sort: r => r.Points.Value, descending: true }
    ];

    results = @Html.Raw(JsonSerializer.Serialize(Model.RankedResults));
</script>

@await Html.PartialAsync("Results")